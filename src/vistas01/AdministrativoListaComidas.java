/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistas01;

import controlDatos.ComidaData;
import entidades.Comida;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import stuff.Utileria;

/**
 *
 * @author Equipo
 */
public class AdministrativoListaComidas extends javax.swing.JInternalFrame {

    private int click;
    private int filaS = -1;
    private int estado;
    private ComidaData cd = new ComidaData();
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int f, int c) {
            return false;
        }
    };

    /**
     * Creates new form ListaComidas
     */
    public AdministrativoListaComidas() {
        initComponents();
        this.click = 1;
        Utileria utileria = new Utileria(click);
        Cabecera();
        utileria.ordenamientoDeTabla(jTComidas);
        cargarComboBox();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTingreso = new javax.swing.JTextField();
        jCbFiltrado = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jRbActivos = new javax.swing.JRadioButton();
        jRbTodos = new javax.swing.JRadioButton();
        jRbInactivos = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTComidas = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jBalta_baja = new javax.swing.JButton();
        jBeliminar = new javax.swing.JButton();
        jBcerrar = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(700, 500));

        jTingreso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTingresoKeyReleased(evt);
            }
        });

        jCbFiltrado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));
        jCbFiltrado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbFiltradoActionPerformed(evt);
            }
        });

        jLabel1.setText("Listado de las comidas segun filtrado elegido");

        buttonGroup1.add(jRbActivos);
        jRbActivos.setText("Estados True (1y2)");
        jRbActivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRbActivosActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRbTodos);
        jRbTodos.setText("Todos");
        jRbTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRbTodosActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRbInactivos);
        jRbInactivos.setText("Estado false(0)");
        jRbInactivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRbInactivosActionPerformed(evt);
            }
        });

        jTComidas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTComidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTComidasMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTComidas);

        jLabel2.setText("Seleccionar filtrado:");

        jLabel3.setText("Ingrese que buscar:");

        jBalta_baja.setText("Alta/Baja");
        jBalta_baja.setEnabled(false);
        jBalta_baja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBalta_bajaActionPerformed(evt);
            }
        });

        jBeliminar.setText("Eliminar");
        jBeliminar.setEnabled(false);
        jBeliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBeliminarActionPerformed(evt);
            }
        });

        jBcerrar.setText("Cerrar");
        jBcerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcerrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRbActivos)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                .addComponent(jTingreso, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCbFiltrado, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jRbInactivos)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 165, Short.MAX_VALUE)
                                .addComponent(jRbTodos))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jBalta_baja, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jBeliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBcerrar)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTingreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCbFiltrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRbActivos)
                    .addComponent(jRbTodos)
                    .addComponent(jRbInactivos))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBeliminar)
                    .addComponent(jBalta_baja)
                    .addComponent(jBcerrar))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTingresoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTingresoKeyReleased
        // TODO add your handling code here:
        borrarFila();
        try {
            if (jCbFiltrado.getSelectedIndex() == 0) {
                Utileria.mensaje("Debe seleccionar una categoria para filtrar");
            } else {
                if (jRbActivos.isSelected() || jRbInactivos.isSelected() || jRbTodos.isSelected()) {
                    if (jRbActivos.isSelected()) {
                        this.estado = 2;
                    } else if (jRbInactivos.isSelected()) {
                        this.estado = 1;
                    } else {
                        this.estado = 0;
                    }
                    obtencionDeDatos();
                }
            }
        } catch (NumberFormatException e) {
            return;
        }

    }//GEN-LAST:event_jTingresoKeyReleased

    private void jRbActivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRbActivosActionPerformed
        // TODO add your handling code here:
        borrarFila();
        this.estado = 2;
        Cabecera();
        obtencionDeDatos();

    }//GEN-LAST:event_jRbActivosActionPerformed

    private void jRbInactivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRbInactivosActionPerformed
        // TODO add your handling code here:
        borrarFila();
        this.estado = 1;
        Cabecera();
        obtencionDeDatos();

    }//GEN-LAST:event_jRbInactivosActionPerformed

    private void jRbTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRbTodosActionPerformed
        // TODO add your handling code here:
        borrarFila();
        this.estado = 0;
        Cabecera();
        obtencionDeDatos();

    }//GEN-LAST:event_jRbTodosActionPerformed

    private void jCbFiltradoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbFiltradoActionPerformed
        // TODO add your handling code here:
        borrarFila();
        try {
            if (jRbActivos.isSelected() || jRbInactivos.isSelected() || jRbTodos.isSelected()) {
                if (jRbActivos.isSelected()) {
                    this.estado = 2;
                } else if (jRbInactivos.isSelected()) {
                    this.estado = 1;
                } else {
                    this.estado = 0;
                }
            }
            if (jCbFiltrado.getSelectedIndex() != 0 && !jRbActivos.isSelected() && !jRbInactivos.isSelected()) {
                jRbTodos.setSelected(true);
            }
            obtencionDeDatos();
            if (jCbFiltrado.getSelectedIndex() == 0) {
                buttonGroup1.clearSelection();
                jTingreso.setText("");
                borrarFila();
            }
        } catch (NumberFormatException e) {
            return;
        }

    }//GEN-LAST:event_jCbFiltradoActionPerformed

    private void jBalta_bajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBalta_bajaActionPerformed
        // TODO add your handling code here:
        int[] filasS = jTComidas.getSelectedRows();
        if (filaS != -1) {
            for (Integer re : filasS) {
                if (estado == 1 || jTComidas.getValueAt(re, 3) == "false" || jTComidas.getValueAt(re, 3) == "eliminado") {
                    cd.darAlta(jTComidas.getValueAt(re, 0).toString(), Integer.valueOf(jTComidas.getValueAt(re, 2).toString()));
                } else if (jTComidas.getValueAt(re, 3) == "true") {
                    cd.darBaja(jTComidas.getValueAt(re, 0).toString(), Integer.valueOf(jTComidas.getValueAt(re, 2).toString()));
                }
            }
            borrarFila();
            obtencionDeDatos();
            filaS = -1;
        } else {
            Utileria.mensaje("Debe seleccionar una fila");
        }
    }//GEN-LAST:event_jBalta_bajaActionPerformed

    private void jBeliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBeliminarActionPerformed
        // TODO add your handling code here:
        int[] filasS = jTComidas.getSelectedRows();
        if (filaS != -1) {
            for (Integer re : filasS) {
                cd.eliminar(jTComidas.getValueAt(re, 0).toString(), Integer.valueOf(jTComidas.getValueAt(re, 2).toString()));
            }
            borrarFila();
            obtencionDeDatos();
            filaS = -1;
        } else {
            Utileria.mensaje("Debe seleccionar una fila");
        }
    }//GEN-LAST:event_jBeliminarActionPerformed

    private void jBcerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcerrarActionPerformed
        // TODO add your handling code here:
        Object[] op = {"Aceptar", "Cancelar"};
        int i = JOptionPane.showOptionDialog(this, "Desea cerrar?", title, JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, frameIcon, op, "Aceptar");
        if (i == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_jBcerrarActionPerformed

    private void jTComidasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTComidasMouseReleased

        filaS = jTComidas.getSelectedRow();
        if (estado != 1) {
            jBeliminar.setEnabled(true);
        }

        if (estado == 0) {
            if (jTComidas.getValueAt(filaS, 3) == "true" || jTComidas.getValueAt(filaS, 3) == "false") {
                jBalta_baja.setEnabled(true);
                jBeliminar.setEnabled(true);
            } else if (jTComidas.getValueAt(filaS, 3) == "eliminado") {
                jBalta_baja.setEnabled(true);
                jBeliminar.setEnabled(false);
            }
        }
    }//GEN-LAST:event_jTComidasMouseReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBalta_baja;
    private javax.swing.JButton jBcerrar;
    private javax.swing.JButton jBeliminar;
    private javax.swing.JComboBox<String> jCbFiltrado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JRadioButton jRbActivos;
    private javax.swing.JRadioButton jRbInactivos;
    private javax.swing.JRadioButton jRbTodos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTComidas;
    private javax.swing.JTextField jTingreso;
    // End of variables declaration//GEN-END:variables

    private void cargarComboBox() {
        jCbFiltrado.addItem("nombre");
        jCbFiltrado.addItem("detalle");
        jCbFiltrado.addItem("calorias mayor a");
        jCbFiltrado.addItem("calorias menor a");
    }

    private void borrarFila() {
        int filas = modelo.getRowCount() - 1;
        for (int i = filas; i >= 0; i--) {
            modelo.removeRow(i);
        }
    }

    private void Cabecera() {
        modelo.setColumnCount(0);
        if (estado == 1) {
            modelo.addColumn("Nombre");
            modelo.addColumn("Detalle");
            modelo.addColumn("Calorias");
            jTComidas.setModel(modelo);
        } else {
            modelo.addColumn("Nombre");
            modelo.addColumn("Detalle");
            modelo.addColumn("Calorias");
            modelo.addColumn("Estado");
            jTComidas.setModel(modelo);
        }

    }

    private void obtencionDeDatos() {
        String estadoImp;
        jBalta_baja.setEnabled(false);
        jBeliminar.setEnabled(false);
        String seleccion = jCbFiltrado.getSelectedItem().toString();
        if (seleccion.equals("calorias mayor a")) {
            seleccion = "calorias1";
        } else if (seleccion.equals("calorias menor a")) {
            seleccion = "calorias2";
        }

        String ingreso = jTingreso.getText();
        ArrayList<Comida> comidas = cd.AdminListaComidas(seleccion, ingreso, (estado - 1));
        if (!comidas.isEmpty()) {
            for (Comida recorrer : comidas) {
                if (recorrer.getEstado() == 2) {
                    estadoImp = "true";
                } else if (recorrer.getEstado() == 1) {
                    estadoImp = "false";
                } else {
                    estadoImp = "eliminado";
                }
                if (estado != 1) {
                    modelo.addRow(new Object[]{recorrer.getNombre(), recorrer.getDetalle(), recorrer.getCalorias(), estadoImp});
                } else {
                    modelo.addRow(new Object[]{recorrer.getNombre(), recorrer.getDetalle(), recorrer.getCalorias()});
                }

            }
            if (estado == 2) {
                jBalta_baja.setEnabled(true);
                jBeliminar.setEnabled(true);
            } else if (estado == 1) {
                jBalta_baja.setEnabled(true);
                jBeliminar.setEnabled(false);
            }
        }
    }

//    public void ordenamientoDeTabla() {
//        //ordena la tabla segun donde le de click en la cabecera
//        TableRowSorter<TableModel> sorter = new TableRowSorter<>(jTComidas.getModel());
//        jTComidas.setRowSorter(sorter);
//
//        jTComidas.getTableHeader().addMouseListener(new MouseAdapter() {
//
//            @Override
//            public void mouseClicked(MouseEvent e) {
//                if (e.getClickCount() == e.getClickCount()) {
//                    int colum = jTComidas.columnAtPoint(e.getPoint());
//                    sorter.toggleSortOrder(colum);
//                    click += 1;
//                }
//            }
//        });
//    }
}
